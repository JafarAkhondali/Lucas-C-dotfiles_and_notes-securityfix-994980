( ps -p $PPID -o comm= | grep -Eq 'tilda|su|screen|ssh|tmux' || uname | grep -Eq 'CYGWIN|Darwin' ) && return

if type tmux >/dev/null 2>&1; then # use TMUX > SCREEN, because of its "no flush" bug (typically on grep | grep cmds)

# CTRL+B c : new window
# CTRL+B w : list windows
# CTRL+B <nb> : switch to window <nb>

# CTRL+B " : split horizontally
# CTRL+B % : split vertically
# CTRL+B arrows : move between panes
# CTRL+B ! : extract pane in a new window

# CTRL+B d : detach
# CTRL+B PageUp : enter copy mode

if [ $TERM != "screen" ]; then
    if ! ps -eo comm | grep -q '^tmux$'; then
        tmux new -s tmux_$USER
    fi
    tmux a -t tmux_$USER
fi

elif type screen >/dev/null 2>&1; then # use basic SCREEN

# screen -ls
# screen -r
# DOC: http://www.bangmoney.org/presentations/screen.html

function at_every_cmd() {
    if [ -n "$STY" ] && [ "$@" != "prompt_command" ] ; then
        # 'shelltitle' in .screenrc doesn't work well : tab names get stuck to vim calls
        screen -X title "$@"
    fi
}

if [ $TERM != "screen" ]; then
    if ! ps -eo comm | grep -q '^screen$'; then
        screen -wipe
        screen -c ${BASHRC_DIR:-$HOME}/.screenrc -d -m
    fi
    screen -A -x
else
    # HACKED thanks to http://code-and-hacks.blogspot.com/2010/04/setting-terminal-title-in-gnu-screen.html
    # and http://www.davidpashley.com/articles/xterm-titles-with-bash.html
    trap 'at_every_cmd "$BASH_COMMAND"' DEBUG
fi

fi # end TMUX/SCREEN conditional

