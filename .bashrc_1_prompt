# INSPIRATION: jeremy-bash@batray.net ; http://www.dreaming.org/~giles/bashprompt/prompts/dan.html

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

export T_normal=0
export T_bold=1
export T_underline=4
export C_owner='0;32'
export C_write='0;36'
export C_nowrite='0;31'
export C_error='1;31'

export DIRCOLOR=$T_normal
export EXIT_CODE=0
export CODE_COLOR=$T_normal
export CODE_STRING=
export USER_STYLE=$T_normal
export HOST_COLOR='1;35'

CURRENT_PWD_DIR=$BASHRC_DIR/.current_pwd
mkdir -p $CURRENT_PWD_DIR

prompt_command()
{
    EXIT_CODE=$?
    DIRCOLOR=$T_normal
    if [ -O "$PWD" ]; then
        DIRCOLOR=$C_owner
    elif [ -w "$PWD" ]; then
        DIRCOLOR=$C_write
    else
        DIRCOLOR=$C_nowrite
    fi
    if [ $EXIT_CODE -ne 0 ]; then
        CODE_COLOR=$C_error
        CODE_STRING=\ $EXIT_CODE
    else
        CODE_COLOR=$T_normal
        CODE_STRING=
    fi

    if [ -S "$SSH_AUTH_SOCK" ]; then
        USER_STYLE=$T_underline
    else
        USER_STYLE=$T_normal
    fi

    history -a # flush history => shared between term sessions 

    [ -n "${TMUX:-}" ] && tmux list-windows | awk -F: '{print $1}' > $CURRENT_PWD_DIR/tmux_live_windows
}

cd () {                 # zsh-like, USAGE: cd $path | cd $old_path_snippet $new_path_subst
    local error_code
    if [ -z "${1:-}" ]; then
        builtin cd
    elif [ -z "${2:-}" ]; then
        builtin cd "$1"
    else
        local stringified_path="$@"
        local subsituted_path="${PWD/$1/$2}"
        if [ -d "$stringified_path" ]; then
            builtin cd "$stringified_path"
        elif [ -d "$subsituted_path" ]; then
            builtin cd "$subsituted_path"
        else
            builtin cd "$@"
        fi
    fi
    error_code=$?
    [ $error_code -ne 0 ] && return $error_code
    if [ -n "${TMUX:-}" ]; then
        set_term_window_name "#[fg=colour$((RANDOM%230+1))]$(hostname | cut -d. -f1):$(pwd | awk -F/ '{print $NF}')#[default]"
        local tmux_window=$(tmux display -pt $TMUX_PANE '#I')
        pwd > $CURRENT_PWD_DIR/tmux_window_${tmux_window}_pwd
    else
        set_term_window_name "$(hostname | cut -d. -f1):$(pwd | awk -F/ '{print $NF}')"
    fi
    [ "$PWD" != "$HOME" ] && pwd > $CURRENT_PWD_DIR/last_pwd
    return 0
}
alias ..="cd .."
alias ...="cd ../.."

set_term_window_name () {  # Valid for Tmux AND Screen
    [ "${TERM:-}" = screen ] && printf "\033k$@\033\\"
    return 0
}

_tmux_restore_windows () {
    [ -n "${TMUX:-}" ] || return 1
    local tmux_window=$(tmux display -pt $TMUX_PANE '#I')
    [ -e $BASHRC_DIR/.tmux_window_${tmux_window}_needs_to_be_restored ] || return 2
    if [ $tmux_window -eq 0 ]; then
        local is_first_window=true
        while read window_id; do
            if $is_first_window; then
                [ $window_id -ne 0 ] && tmux move-window -t $window_id
                is_first_window=false
            else
                touch $BASHRC_DIR/.tmux_window_${window_id}_needs_to_be_restored
                tmux new-window -t $window_id
            fi
        done < $CURRENT_PWD_DIR/tmux_live_windows
    fi
    cd $(cat $CURRENT_PWD_DIR/tmux_window_${tmux_window}_pwd)
    rm $BASHRC_DIR/.tmux_window_${tmux_window}_needs_to_be_restored
}

_tmux_restore_windows || builtin cd "$(cat $CURRENT_PWD_DIR/last_pwd 2>/dev/null)"

export PROMPT_COMMAND=prompt_command

if [ ${TERM:0:5} = xterm ]; then
    PS1='\[\e]0;\u@\h:\W\007\]'
else
    PS1=''
fi
PS1=$PS1'\[\e[${USER_STYLE}m\]\u\[\e[${T_normal}m\]@\[\e[${HOST_COLOR}m\]\h\[\e[${T_normal}m\]:\[\e[${DIRCOLOR}m\]\W\[\e[${CODE_COLOR}m\]$CODE_STRING\[\e[${T_normal}m\]\$ '
export PS1
# PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$'
