#!/usr/bin/env python3

# Each new term in the Fibonacci sequence is generated by adding the previous two terms.
# By starting with 1 and 2, the first 10 terms will be:
#   1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million,
# find the sum of the even-valued terms.

# time ./problem02.py
# 4613732
# real    0m0,204s

def test_sum_fibo_even_terms_under():
    assert sum_fibo_even_terms_under(3) == 2
    assert sum_fibo_even_terms_under(10) == 2+8
    assert sum_fibo_even_terms_under(100) == 2+8+34

def sum_fibo_even_terms_under(max):
    total = 0
    x, y = 1, 1
    while y < max:
        if y % 2 == 0:
            total += y
        y, x = y + x, y
    return total

if __name__ == '__main__':
    print(sum_fibo_even_terms_under(4000000))
