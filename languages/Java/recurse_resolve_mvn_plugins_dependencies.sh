#!/bin/bash

# A hackish improvment over 'mvn dependency:resolve-plugins'

# USAGE: ./recurse_resolve_mvn_plugins_dependencies.sh > full_mvn_plugins_dependencies

# The following worked for me when I needed a quick hack,
# but instead of searching Apache SVN + Github + etc., a better strategy would be:
#  1. search MavenCentral : curl -s "http://search.maven.org/solrsearch/select?q=g:org.apache.maven.indexer+AND+a:maven-indexer&core=gav" | jq -r .response.docs[].id
#    cf. http://search.maven.org/ajaxsolr/images/MavenCentralAPIGuide.pdf
#  2. get the pom.xml: http://repo1.maven.org/maven2/org/springframework/boot/spring-boot-starter-tomcat/1.2.6.RELEASE/spring-boot-starter-tomcat-1.2.6.RELEASE.pom
#  3. call mvn dependency:tree

set -o pipefail -o errexit -o nounset -o igncr # -> ignore CRLF generated by jq: https://github.com/stedolan/jq/issues/92

TMP_DIR=/var/tmp/resolve_mvn_plugins
declare -A KNOWN_POMS
KNOWN_POMS[spring-boot-maven-plugin]=https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tools/spring-boot-maven-plugin/pom.xml

main () {
    mkdir -p $TMP_DIR

    mvn dependency:resolve-plugins | grep 'Plugin Resolved:' | sed -e 's/.* //' -e 's/-[0-9].*//' | sort | uniq > $TMP_DIR/project_mvn_plugins
    svn ls -v http://svn.apache.org/viewvc/maven/plugins/tags/ | sed -e 's/.* //' -e 's/\/$//' > $TMP_DIR/all_svn_mvn_plugins

    cd $TMP_DIR

    local plugin
    for plugin in $(cat project_mvn_plugins); do
        local plugin_pom_url=$(find_plugin_pom_url plugin=$plugin)
        display_dependency_tree plugin_pom_url=$plugin_pom_url
    done
}

find_plugin_pom_url () {
    local plugin
    local "$@"

    if [ -n "${KNOWN_POMS[$plugin]:-}" ]; then
        echo ${KNOWN_POMS[$plugin]}
        return
    fi

    local apache_repo=$(grep $plugin all_svn_mvn_plugins | tail -n 1)
    if [ -n "$apache_repo" ]; then
        echo "http://svn.apache.org/viewvc/maven/plugins/tags/$apache_repo/pom.xml?view=co&content-type=text%2Fplain"
        return
    fi

    local mojohaus_repo=$(github_search_reponame user=mojohaus name=$plugin)
    if [ -n "$mojohaus_repo" ]; then
        github_search_filename_at_repo_root repo=$mojohaus_repo filename=pom.xml | sed -e 's/github.com/raw.githubusercontent.com/' -e 's/blob\/[a-z0-9]\+\//master/'
        return
    fi

    echo "$plugin not found in neither svn.apache.org nor github.com/mojohaus";
}

display_dependency_tree () {
    local plugin_pom_url
    local "$@"
    rm -f pom.xml
    curl --silent "$plugin_pom_url" > pom.xml
    echo "# $plugin_pom_url"
    mvn dependency:tree | grep -E '\[INFO\] (\+|\|)'
}

github_search_reponame () {
    local user name
    local "$@"
    curl --fail --silent "https://api.github.com/search/repositories?q=user:$user+in:name+$name" | jq -r .items[].full_name
}

github_search_filename_at_repo_root () {
    local repo name
    local "$@"
    curl --fail --silent "https://api.github.com/search/code?q=repo:$repo+path:/+in:path+$filename" | jq -r .items[].html_url
}

main "$@"
