#========
### SHELL

# Resurect computer : http://en.wikipedia.org/wiki/Magic_SysRq_key

# Fixing terminal frenzy
echo <ctrl-v><ctrl-o>

# Change keyboard to FR
loadkeys fr

# 'top'
* killing : Press "k", then pid, then signal (15, 9...)
* sorting : press "O" and select the column
* display absolute path of commands : "c"

# replace chars from last command 
ls docs
^docs^web^

!$ # select the last arg
!!:n # selects the nth argument of the last command

mesg
write
wall # broadcast message

#=========
### DEBIAN

# Use 'apt-file' to see which package provides that file you're missing

sudo dpkg -D1 -i *.deb


#=========
### SYSTEM

lsb_release -a
cat /etc/motd
uname -a
cat /etc/issue*

# Virtualbox
sudo adduser $USER vboxusers # then logout
VBoxManage list vms
VBoxManage controlvm <name> poweroff

# Get uid / groups infos
id $USER # for primary group, use -ng flag
adduser / moduser -a -G # DO NOT FORGET THE -a !!!

# Add a Linuxsecondary group without logging out
newgroup <new secondary group>
newgroup <original primary group>

# List system users
awk -F":" '{ print "username: " $1 "\t\tuid:" $3 }' /etc/passwd

# Sudo user
sudo su -l

# Remove sudo time stamp => no more sudo rights
sudo -K

# setuid: When an executable file has been given the setuid attribute, normal users on the system who have permission to execute this file gain the privileges of the user who owns the file within the created process.
# setgid: Setting the setgid permission on a directory (chmod g+s) causes new files and subdirectories created within it to inherit its group ID

# Watch system stats
watch -d 'cat /proc/meminfo'

iostat

# Checking Swap Space Size and Usage
vmstat 2
sar
# + to consult history : https://access.redhat.com/knowledge/docs/en-US/Red_Hat_Enterprise_Linux/5/html/Tuning_and_Optimizing_Red_Hat_Enterprise_Linux_for_Oracle_9i_and_10g_Databases/sect-Oracle_9i_and_10g_Tuning_Guide-Swap_Space-Checking_Swap_Space_Size_and_Usage.html


#=============
### NETWORKING

# How to grep IPs
grep '[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}'

curl
#See: http://curl.haxx.se/docs/httpscripting.html

# Iptables
iptables -A INPUT -s <IP_OR_HOSTNAME> -j DROP
iptables -n -L -v

snmpget -v2c -c '<community_string>' <device> SNMPv2-MIB::sysDescr.0
# or sysUpTime, sysName
# The community string can be found in the 'Variables' tab in an AutoNOC device page

# Dump all tcp transmission to a specific IP :
sudo tcpdump host $IP

# Attribute IP to interface
ifconfig eth0 192.168.0.1

# Query DNS
dig txt [+short] <hostname>
host -t txt <hostname>

# List packet exchanges
netstat

# Checking ports
netstat -nap <port>
nmap -sS -O 127.0.0.1 # Guess OS !!
lsof -i -P -p <pid> # -n => no IP->hostname resolution


#=============
### FILES

## More LSOF
# To see all files open in a directory structure:
lsof +D /some/dir
# To see all files jeff has open:
sudo lsof -u jeff
# Additional useful option : -r <t> : repeat the listing every t second

# Find non-ASCII characters
grep --color='auto' -P -n "[\x80-\xFF]" file.xml

# Sum up kind of files without ext
ls | cut -d . -f 1 | sort | uniq -c

# Sets intersec
comm -12 #or uniq -d

diff --side-by-side

# Shows Where a File/Directory Comes From (links, etc.)
namei

# Create fake file
sudo dd if=/dev/urandom of=FAKE-2012Oct23-000000.rdb bs=1M count=6000

nm *.o

readelf -Ws *.so

hexdump -c

#Append at the end of stdout (or beginning with ^)
echo ECHO | sed s/$/.ext/

# Convert .wmv to .avi
mencoder vid.wmv -o vid.avi -ofps 25 -ni -ovc lavc -oac mp3lame
# .mp4 to .avi
ffmpeg -i vid.mp4 -f avi -vcodec copy -acodec copy vid.avi


#=============
### Various

sudo ldconfig

# Follow program system calls
strace -c -p <pid> -e open,access,poll,select,connect,recvfrom,sendto

# Message of the day
/etc/motd

# Launch command at a specified time or when load average is under 0.8
echo <cmd> | at midnight
echo <cmd> | batch

# Rescan for memory card
sudo su -l
echo 1 > /sys/bus/pci/rescan


##################
# Shell scripting
##################

# Standard warnings
set -eux

# Redirect logs
exec >>$0.log.$(date +%Y-%m-%d-%H) 2>&1

# Set positional parameters $0 $1 ...
set - A B C

# Garbage cleaner
trap "e=$?;<CMDS>;exit $e" EXIT INT TERM HUP QUIT

# Script file parent dir
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# Standard logs date
date "+%F %T,%N" | cut -c-23

# Abort <CMD> after a timeout
( cmdpid=$BASHPID; (sleep 10; kill $cmdpid) & exec <CMD> )

# Named pipes: https://en.wikipedia.org/wiki/Named_pipe

cat <<EOF
EOF

# mktemp dir & default value
tdir="$(mktemp -d ${TMPDIR:-/tmp}/$0)"

# Parsing *=* args (unsecure)
# Push element in an array
declare -a argFiles
for arg in "$@"; do
    case $arg in
        *=*) eval $arg;;
        *) argFiles[${#argFiles[*]}]="$(readlink -f $arg)";;
    esac
done

# Convert to array
IFS=' '
declare -a argsArray
read -ra argsArray <<< "$@"
# Back to string
echo "${args[*]}"

# Variables substitutions (http://tldp.org/LDP/abs/html/parameter-substitution.html)
echo ${PWD//\//-}

# disable wildcard expansion
set -f
# list options values
echo $-

# Syslog
logger -is -t SCRIPT_NAME -p user.warn "Message"

# Logrotate (to call in a cron job)
# Examples: http://www.thegeekstuff.com/2010/07/logrotate-examples/
logrotate -s /var/log/logstatus /etc/logrotate.conf

# Control process priority (useful in cron job)
nice / ionice / renice


@@@@@@@@@@
@ MAC OSX
@@@@@@@@@@

# File listed with '@' => extended attributes
xattr -l <file>

# Add user to group
sudo dseditgroup -o edit -a <USER> -t user <GROUP>

:::::::::
:: MySQL
:::::::::

# How to start a file to make it executable AND runnable with mysql < FILE.mysql :
/*/cat <<NOEND | mysql #*/
use ...;
select
    ...
from
    ...
where
    ...;


<!---->
<html/>
<!---->

# use protocol-relative URLs (starting with //) like so:
<img src="//domain.com/img/logo.png">
# This will cause the browser to automatically prepend the protocol that is currently being used. This trick also works in CSS.

# Notepad in browser
data:text/html, <html contenteditable>


#-----#
# SVN #
#-----#

# Svn ignore
svn propedit svn:ignore DIR # then specify PATTERNS

# Get all svn props
svn propget -R svn:ignore .

# Rm added then removed files
svn status | grep '!M' | awk '{print $2}' | xargs svn rm #--force

# Display even ignored files
svn status --no-ignore

# List modifcations /commit
svn diff --summarize -c <nb>

# Checkout file
svn up -r <rev> <file>


#*****#
# Git
#*****#

# Reflog
git reflog –> To list all actions done on the git repo ( not only the commits, but all commands that were run, including rebases )
git reset --hard HEAD@{3} -> To rewind the repo back to the state of HEAD@{3} in the reflog lists.
 
# List versioned files
git ls-tree --name-only HEAD

# Git bisect
git bisect start
git bisect good GOOD_REVISION_OR_TAG
git bisect bad BAD_REVISION_OR_TAG # or don’t provide a revision to indicate the current revision
git bisect run <cmd>
# Bisect will now step through the commits in an automated fashion, marking commits good or bad depending on the exit code of <cmd>, until it find the culprit commit.
git bisect reset # to return your repository to the state it started in

# Rollback last pushed commit
git revert HEAD

=======
= Wiki
=======

#REDIRECT[[United States]]


/////////
// Java
/////////

jconsole
// http://docs.oracle.com/javase/6/docs/technotes/guides/management/jconsole.html

// Object-type histogram on a running jvm
jmap -histo:live <pid>

// String / ByteString correct conversion :
String asString = new String( byteString.getArray(), "UTF-8" );
ByteString asBytes = ByteString.wrap( string.getBytes( "UTF-8" );

// Built-in parallelism the easy way : ExecutorService


""""""""""""
""" Python
""""""""""""

# HTTP server
python -m SimpleHTTPServer 8080 # --version > 3: -m http.server

__slots__ # attribute
# Its proper use is "to save space in objects. Instead of having a dynamic dict that allows adding attributes to objects at anytime, there is a static structure which does not allow additions after creation. This saves the overhead of one dict for every object that uses slots." 


/******/
// C++
/******/

// Basic exception
throw runtime_error("invalid type");
// Catching bad_alloc
try {
    obj = new Object;
} catch(std::bad_alloc &e) {
    std::cerr << "oom " << e.what() << std::endl;
    throw;
}
